/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package twitter.avro;
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Tweet extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1033656748599205854L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Tweet\",\"namespace\":\"twitter.avro\",\"fields\":[{\"name\":\"created_at\",\"type\":\"string\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"text\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"source\",\"type\":\"string\"},{\"name\":\"retweet_count\",\"type\":\"int\"},{\"name\":\"favorite_count\",\"type\":\"int\"},{\"name\":\"screen_name\",\"type\":\"string\"},{\"name\":\"location\",\"type\":[\"string\",\"null\"],\"default\":\"null\"},{\"name\":\"description\",\"type\":[\"string\",\"null\"],\"default\":\"null\"},{\"name\":\"followers_count\",\"type\":\"int\"},{\"name\":\"statuses_count\",\"type\":\"int\"},{\"name\":\"geo_enabled\",\"type\":\"boolean\"},{\"name\":\"lang\",\"type\":\"string\"},{\"name\":\"hashtags\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"urls\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"user_mentions\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"long\",\"type\":[\"double\",\"null\"],\"default\":0},{\"name\":\"lat\",\"type\":[\"double\",\"null\"],\"default\":0}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public CharSequence created_at;
  @Deprecated public long id;
  @Deprecated public CharSequence text;
  @Deprecated public CharSequence source;
  @Deprecated public int retweet_count;
  @Deprecated public int favorite_count;
  @Deprecated public CharSequence screen_name;
  @Deprecated public CharSequence location;
  @Deprecated public CharSequence description;
  @Deprecated public int followers_count;
  @Deprecated public int statuses_count;
  @Deprecated public boolean geo_enabled;
  @Deprecated public CharSequence lang;
  @Deprecated public java.util.List<CharSequence> hashtags;
  @Deprecated public java.util.List<CharSequence> urls;
  @Deprecated public java.util.List<CharSequence> user_mentions;
  @Deprecated public Double long$;
  @Deprecated public Double lat;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Tweet() {}

  /**
   * All-args constructor.
   */
  public Tweet(CharSequence created_at, Long id, CharSequence text, CharSequence source, Integer retweet_count, Integer favorite_count, CharSequence screen_name, CharSequence location, CharSequence description, Integer followers_count, Integer statuses_count, Boolean geo_enabled, CharSequence lang, java.util.List<CharSequence> hashtags, java.util.List<CharSequence> urls, java.util.List<CharSequence> user_mentions, Double long$, Double lat) {
    this.created_at = created_at;
    this.id = id;
    this.text = text;
    this.source = source;
    this.retweet_count = retweet_count;
    this.favorite_count = favorite_count;
    this.screen_name = screen_name;
    this.location = location;
    this.description = description;
    this.followers_count = followers_count;
    this.statuses_count = statuses_count;
    this.geo_enabled = geo_enabled;
    this.lang = lang;
    this.hashtags = hashtags;
    this.urls = urls;
    this.user_mentions = user_mentions;
    this.long$ = long$;
    this.lat = lat;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public Object get(int field$) {
    switch (field$) {
    case 0: return created_at;
    case 1: return id;
    case 2: return text;
    case 3: return source;
    case 4: return retweet_count;
    case 5: return favorite_count;
    case 6: return screen_name;
    case 7: return location;
    case 8: return description;
    case 9: return followers_count;
    case 10: return statuses_count;
    case 11: return geo_enabled;
    case 12: return lang;
    case 13: return hashtags;
    case 14: return urls;
    case 15: return user_mentions;
    case 16: return long$;
    case 17: return lat;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: created_at = (CharSequence)value$; break;
    case 1: id = (Long)value$; break;
    case 2: text = (CharSequence)value$; break;
    case 3: source = (CharSequence)value$; break;
    case 4: retweet_count = (Integer)value$; break;
    case 5: favorite_count = (Integer)value$; break;
    case 6: screen_name = (CharSequence)value$; break;
    case 7: location = (CharSequence)value$; break;
    case 8: description = (CharSequence)value$; break;
    case 9: followers_count = (Integer)value$; break;
    case 10: statuses_count = (Integer)value$; break;
    case 11: geo_enabled = (Boolean)value$; break;
    case 12: lang = (CharSequence)value$; break;
    case 13: hashtags = (java.util.List<CharSequence>)value$; break;
    case 14: urls = (java.util.List<CharSequence>)value$; break;
    case 15: user_mentions = (java.util.List<CharSequence>)value$; break;
    case 16: long$ = (Double)value$; break;
    case 17: lat = (Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'created_at' field.
   */
  public CharSequence getCreatedAt() {
    return created_at;
  }

  /**
   * Sets the value of the 'created_at' field.
   * @param value the value to set.
   */
  public void setCreatedAt(CharSequence value) {
    this.created_at = value;
  }

  /**
   * Gets the value of the 'id' field.
   */
  public Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'text' field.
   */
  public CharSequence getText() {
    return text;
  }

  /**
   * Sets the value of the 'text' field.
   * @param value the value to set.
   */
  public void setText(CharSequence value) {
    this.text = value;
  }

  /**
   * Gets the value of the 'source' field.
   */
  public CharSequence getSource() {
    return source;
  }

  /**
   * Sets the value of the 'source' field.
   * @param value the value to set.
   */
  public void setSource(CharSequence value) {
    this.source = value;
  }

  /**
   * Gets the value of the 'retweet_count' field.
   */
  public Integer getRetweetCount() {
    return retweet_count;
  }

  /**
   * Sets the value of the 'retweet_count' field.
   * @param value the value to set.
   */
  public void setRetweetCount(Integer value) {
    this.retweet_count = value;
  }

  /**
   * Gets the value of the 'favorite_count' field.
   */
  public Integer getFavoriteCount() {
    return favorite_count;
  }

  /**
   * Sets the value of the 'favorite_count' field.
   * @param value the value to set.
   */
  public void setFavoriteCount(Integer value) {
    this.favorite_count = value;
  }

  /**
   * Gets the value of the 'screen_name' field.
   */
  public CharSequence getScreenName() {
    return screen_name;
  }

  /**
   * Sets the value of the 'screen_name' field.
   * @param value the value to set.
   */
  public void setScreenName(CharSequence value) {
    this.screen_name = value;
  }

  /**
   * Gets the value of the 'location' field.
   */
  public CharSequence getLocation() {
    return location;
  }

  /**
   * Sets the value of the 'location' field.
   * @param value the value to set.
   */
  public void setLocation(CharSequence value) {
    this.location = value;
  }

  /**
   * Gets the value of the 'description' field.
   */
  public CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'followers_count' field.
   */
  public Integer getFollowersCount() {
    return followers_count;
  }

  /**
   * Sets the value of the 'followers_count' field.
   * @param value the value to set.
   */
  public void setFollowersCount(Integer value) {
    this.followers_count = value;
  }

  /**
   * Gets the value of the 'statuses_count' field.
   */
  public Integer getStatusesCount() {
    return statuses_count;
  }

  /**
   * Sets the value of the 'statuses_count' field.
   * @param value the value to set.
   */
  public void setStatusesCount(Integer value) {
    this.statuses_count = value;
  }

  /**
   * Gets the value of the 'geo_enabled' field.
   */
  public Boolean getGeoEnabled() {
    return geo_enabled;
  }

  /**
   * Sets the value of the 'geo_enabled' field.
   * @param value the value to set.
   */
  public void setGeoEnabled(Boolean value) {
    this.geo_enabled = value;
  }

  /**
   * Gets the value of the 'lang' field.
   */
  public CharSequence getLang() {
    return lang;
  }

  /**
   * Sets the value of the 'lang' field.
   * @param value the value to set.
   */
  public void setLang(CharSequence value) {
    this.lang = value;
  }

  /**
   * Gets the value of the 'hashtags' field.
   */
  public java.util.List<CharSequence> getHashtags() {
    return hashtags;
  }

  /**
   * Sets the value of the 'hashtags' field.
   * @param value the value to set.
   */
  public void setHashtags(java.util.List<CharSequence> value) {
    this.hashtags = value;
  }

  /**
   * Gets the value of the 'urls' field.
   */
  public java.util.List<CharSequence> getUrls() {
    return urls;
  }

  /**
   * Sets the value of the 'urls' field.
   * @param value the value to set.
   */
  public void setUrls(java.util.List<CharSequence> value) {
    this.urls = value;
  }

  /**
   * Gets the value of the 'user_mentions' field.
   */
  public java.util.List<CharSequence> getUserMentions() {
    return user_mentions;
  }

  /**
   * Sets the value of the 'user_mentions' field.
   * @param value the value to set.
   */
  public void setUserMentions(java.util.List<CharSequence> value) {
    this.user_mentions = value;
  }

  /**
   * Gets the value of the 'long$' field.
   */
  public Double getLong$() {
    return long$;
  }

  /**
   * Sets the value of the 'long$' field.
   * @param value the value to set.
   */
  public void setLong$(Double value) {
    this.long$ = value;
  }

  /**
   * Gets the value of the 'lat' field.
   */
  public Double getLat() {
    return lat;
  }

  /**
   * Sets the value of the 'lat' field.
   * @param value the value to set.
   */
  public void setLat(Double value) {
    this.lat = value;
  }

  /**
   * Creates a new Tweet RecordBuilder.
   * @return A new Tweet RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }
  
  /**
   * Creates a new Tweet RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Tweet RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }
  
  /**
   * Creates a new Tweet RecordBuilder by copying an existing Tweet instance.
   * @param other The existing instance to copy.
   * @return A new Tweet RecordBuilder
   */
  public static Builder newBuilder(Tweet other) {
    return new Builder(other);
  }
  
  /**
   * RecordBuilder for Tweet instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Tweet>
    implements org.apache.avro.data.RecordBuilder<Tweet> {

    private CharSequence created_at;
    private long id;
    private CharSequence text;
    private CharSequence source;
    private int retweet_count;
    private int favorite_count;
    private CharSequence screen_name;
    private CharSequence location;
    private CharSequence description;
    private int followers_count;
    private int statuses_count;
    private boolean geo_enabled;
    private CharSequence lang;
    private java.util.List<CharSequence> hashtags;
    private java.util.List<CharSequence> urls;
    private java.util.List<CharSequence> user_mentions;
    private Double long$;
    private Double lat;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }
    
    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.created_at)) {
        this.created_at = data().deepCopy(fields()[0].schema(), other.created_at);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.text)) {
        this.text = data().deepCopy(fields()[2].schema(), other.text);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.source)) {
        this.source = data().deepCopy(fields()[3].schema(), other.source);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.retweet_count)) {
        this.retweet_count = data().deepCopy(fields()[4].schema(), other.retweet_count);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.favorite_count)) {
        this.favorite_count = data().deepCopy(fields()[5].schema(), other.favorite_count);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.screen_name)) {
        this.screen_name = data().deepCopy(fields()[6].schema(), other.screen_name);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.location)) {
        this.location = data().deepCopy(fields()[7].schema(), other.location);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.description)) {
        this.description = data().deepCopy(fields()[8].schema(), other.description);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.followers_count)) {
        this.followers_count = data().deepCopy(fields()[9].schema(), other.followers_count);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.statuses_count)) {
        this.statuses_count = data().deepCopy(fields()[10].schema(), other.statuses_count);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.geo_enabled)) {
        this.geo_enabled = data().deepCopy(fields()[11].schema(), other.geo_enabled);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.lang)) {
        this.lang = data().deepCopy(fields()[12].schema(), other.lang);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.hashtags)) {
        this.hashtags = data().deepCopy(fields()[13].schema(), other.hashtags);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.urls)) {
        this.urls = data().deepCopy(fields()[14].schema(), other.urls);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.user_mentions)) {
        this.user_mentions = data().deepCopy(fields()[15].schema(), other.user_mentions);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.long$)) {
        this.long$ = data().deepCopy(fields()[16].schema(), other.long$);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.lat)) {
        this.lat = data().deepCopy(fields()[17].schema(), other.lat);
        fieldSetFlags()[17] = true;
      }
    }
    
    /**
     * Creates a Builder by copying an existing Tweet instance
     * @param other The existing instance to copy.
     */
    private Builder(Tweet other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.created_at)) {
        this.created_at = data().deepCopy(fields()[0].schema(), other.created_at);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.text)) {
        this.text = data().deepCopy(fields()[2].schema(), other.text);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.source)) {
        this.source = data().deepCopy(fields()[3].schema(), other.source);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.retweet_count)) {
        this.retweet_count = data().deepCopy(fields()[4].schema(), other.retweet_count);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.favorite_count)) {
        this.favorite_count = data().deepCopy(fields()[5].schema(), other.favorite_count);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.screen_name)) {
        this.screen_name = data().deepCopy(fields()[6].schema(), other.screen_name);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.location)) {
        this.location = data().deepCopy(fields()[7].schema(), other.location);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.description)) {
        this.description = data().deepCopy(fields()[8].schema(), other.description);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.followers_count)) {
        this.followers_count = data().deepCopy(fields()[9].schema(), other.followers_count);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.statuses_count)) {
        this.statuses_count = data().deepCopy(fields()[10].schema(), other.statuses_count);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.geo_enabled)) {
        this.geo_enabled = data().deepCopy(fields()[11].schema(), other.geo_enabled);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.lang)) {
        this.lang = data().deepCopy(fields()[12].schema(), other.lang);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.hashtags)) {
        this.hashtags = data().deepCopy(fields()[13].schema(), other.hashtags);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.urls)) {
        this.urls = data().deepCopy(fields()[14].schema(), other.urls);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.user_mentions)) {
        this.user_mentions = data().deepCopy(fields()[15].schema(), other.user_mentions);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.long$)) {
        this.long$ = data().deepCopy(fields()[16].schema(), other.long$);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.lat)) {
        this.lat = data().deepCopy(fields()[17].schema(), other.lat);
        fieldSetFlags()[17] = true;
      }
    }

    /**
      * Gets the value of the 'created_at' field.
      * @return The value.
      */
    public CharSequence getCreatedAt() {
      return created_at;
    }

    /**
      * Sets the value of the 'created_at' field.
      * @param value The value of 'created_at'.
      * @return This builder.
      */
    public Builder setCreatedAt(CharSequence value) {
      validate(fields()[0], value);
      this.created_at = value;
      fieldSetFlags()[0] = true;
      return this; 
    }

    /**
      * Checks whether the 'created_at' field has been set.
      * @return True if the 'created_at' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'created_at' field.
      * @return This builder.
      */
    public Builder clearCreatedAt() {
      created_at = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public Long getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public Builder setId(long value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this; 
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public Builder clearId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'text' field.
      * @return The value.
      */
    public CharSequence getText() {
      return text;
    }

    /**
      * Sets the value of the 'text' field.
      * @param value The value of 'text'.
      * @return This builder.
      */
    public Builder setText(CharSequence value) {
      validate(fields()[2], value);
      this.text = value;
      fieldSetFlags()[2] = true;
      return this; 
    }

    /**
      * Checks whether the 'text' field has been set.
      * @return True if the 'text' field has been set, false otherwise.
      */
    public boolean hasText() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'text' field.
      * @return This builder.
      */
    public Builder clearText() {
      text = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'source' field.
      * @return The value.
      */
    public CharSequence getSource() {
      return source;
    }

    /**
      * Sets the value of the 'source' field.
      * @param value The value of 'source'.
      * @return This builder.
      */
    public Builder setSource(CharSequence value) {
      validate(fields()[3], value);
      this.source = value;
      fieldSetFlags()[3] = true;
      return this; 
    }

    /**
      * Checks whether the 'source' field has been set.
      * @return True if the 'source' field has been set, false otherwise.
      */
    public boolean hasSource() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'source' field.
      * @return This builder.
      */
    public Builder clearSource() {
      source = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'retweet_count' field.
      * @return The value.
      */
    public Integer getRetweetCount() {
      return retweet_count;
    }

    /**
      * Sets the value of the 'retweet_count' field.
      * @param value The value of 'retweet_count'.
      * @return This builder.
      */
    public Builder setRetweetCount(int value) {
      validate(fields()[4], value);
      this.retweet_count = value;
      fieldSetFlags()[4] = true;
      return this; 
    }

    /**
      * Checks whether the 'retweet_count' field has been set.
      * @return True if the 'retweet_count' field has been set, false otherwise.
      */
    public boolean hasRetweetCount() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'retweet_count' field.
      * @return This builder.
      */
    public Builder clearRetweetCount() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'favorite_count' field.
      * @return The value.
      */
    public Integer getFavoriteCount() {
      return favorite_count;
    }

    /**
      * Sets the value of the 'favorite_count' field.
      * @param value The value of 'favorite_count'.
      * @return This builder.
      */
    public Builder setFavoriteCount(int value) {
      validate(fields()[5], value);
      this.favorite_count = value;
      fieldSetFlags()[5] = true;
      return this; 
    }

    /**
      * Checks whether the 'favorite_count' field has been set.
      * @return True if the 'favorite_count' field has been set, false otherwise.
      */
    public boolean hasFavoriteCount() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'favorite_count' field.
      * @return This builder.
      */
    public Builder clearFavoriteCount() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'screen_name' field.
      * @return The value.
      */
    public CharSequence getScreenName() {
      return screen_name;
    }

    /**
      * Sets the value of the 'screen_name' field.
      * @param value The value of 'screen_name'.
      * @return This builder.
      */
    public Builder setScreenName(CharSequence value) {
      validate(fields()[6], value);
      this.screen_name = value;
      fieldSetFlags()[6] = true;
      return this; 
    }

    /**
      * Checks whether the 'screen_name' field has been set.
      * @return True if the 'screen_name' field has been set, false otherwise.
      */
    public boolean hasScreenName() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'screen_name' field.
      * @return This builder.
      */
    public Builder clearScreenName() {
      screen_name = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'location' field.
      * @return The value.
      */
    public CharSequence getLocation() {
      return location;
    }

    /**
      * Sets the value of the 'location' field.
      * @param value The value of 'location'.
      * @return This builder.
      */
    public Builder setLocation(CharSequence value) {
      validate(fields()[7], value);
      this.location = value;
      fieldSetFlags()[7] = true;
      return this; 
    }

    /**
      * Checks whether the 'location' field has been set.
      * @return True if the 'location' field has been set, false otherwise.
      */
    public boolean hasLocation() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'location' field.
      * @return This builder.
      */
    public Builder clearLocation() {
      location = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public CharSequence getDescription() {
      return description;
    }

    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public Builder setDescription(CharSequence value) {
      validate(fields()[8], value);
      this.description = value;
      fieldSetFlags()[8] = true;
      return this; 
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public Builder clearDescription() {
      description = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'followers_count' field.
      * @return The value.
      */
    public Integer getFollowersCount() {
      return followers_count;
    }

    /**
      * Sets the value of the 'followers_count' field.
      * @param value The value of 'followers_count'.
      * @return This builder.
      */
    public Builder setFollowersCount(int value) {
      validate(fields()[9], value);
      this.followers_count = value;
      fieldSetFlags()[9] = true;
      return this; 
    }

    /**
      * Checks whether the 'followers_count' field has been set.
      * @return True if the 'followers_count' field has been set, false otherwise.
      */
    public boolean hasFollowersCount() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'followers_count' field.
      * @return This builder.
      */
    public Builder clearFollowersCount() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'statuses_count' field.
      * @return The value.
      */
    public Integer getStatusesCount() {
      return statuses_count;
    }

    /**
      * Sets the value of the 'statuses_count' field.
      * @param value The value of 'statuses_count'.
      * @return This builder.
      */
    public Builder setStatusesCount(int value) {
      validate(fields()[10], value);
      this.statuses_count = value;
      fieldSetFlags()[10] = true;
      return this; 
    }

    /**
      * Checks whether the 'statuses_count' field has been set.
      * @return True if the 'statuses_count' field has been set, false otherwise.
      */
    public boolean hasStatusesCount() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'statuses_count' field.
      * @return This builder.
      */
    public Builder clearStatusesCount() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'geo_enabled' field.
      * @return The value.
      */
    public Boolean getGeoEnabled() {
      return geo_enabled;
    }

    /**
      * Sets the value of the 'geo_enabled' field.
      * @param value The value of 'geo_enabled'.
      * @return This builder.
      */
    public Builder setGeoEnabled(boolean value) {
      validate(fields()[11], value);
      this.geo_enabled = value;
      fieldSetFlags()[11] = true;
      return this; 
    }

    /**
      * Checks whether the 'geo_enabled' field has been set.
      * @return True if the 'geo_enabled' field has been set, false otherwise.
      */
    public boolean hasGeoEnabled() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'geo_enabled' field.
      * @return This builder.
      */
    public Builder clearGeoEnabled() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'lang' field.
      * @return The value.
      */
    public CharSequence getLang() {
      return lang;
    }

    /**
      * Sets the value of the 'lang' field.
      * @param value The value of 'lang'.
      * @return This builder.
      */
    public Builder setLang(CharSequence value) {
      validate(fields()[12], value);
      this.lang = value;
      fieldSetFlags()[12] = true;
      return this; 
    }

    /**
      * Checks whether the 'lang' field has been set.
      * @return True if the 'lang' field has been set, false otherwise.
      */
    public boolean hasLang() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'lang' field.
      * @return This builder.
      */
    public Builder clearLang() {
      lang = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'hashtags' field.
      * @return The value.
      */
    public java.util.List<CharSequence> getHashtags() {
      return hashtags;
    }

    /**
      * Sets the value of the 'hashtags' field.
      * @param value The value of 'hashtags'.
      * @return This builder.
      */
    public Builder setHashtags(java.util.List<CharSequence> value) {
      validate(fields()[13], value);
      this.hashtags = value;
      fieldSetFlags()[13] = true;
      return this; 
    }

    /**
      * Checks whether the 'hashtags' field has been set.
      * @return True if the 'hashtags' field has been set, false otherwise.
      */
    public boolean hasHashtags() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'hashtags' field.
      * @return This builder.
      */
    public Builder clearHashtags() {
      hashtags = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'urls' field.
      * @return The value.
      */
    public java.util.List<CharSequence> getUrls() {
      return urls;
    }

    /**
      * Sets the value of the 'urls' field.
      * @param value The value of 'urls'.
      * @return This builder.
      */
    public Builder setUrls(java.util.List<CharSequence> value) {
      validate(fields()[14], value);
      this.urls = value;
      fieldSetFlags()[14] = true;
      return this; 
    }

    /**
      * Checks whether the 'urls' field has been set.
      * @return True if the 'urls' field has been set, false otherwise.
      */
    public boolean hasUrls() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'urls' field.
      * @return This builder.
      */
    public Builder clearUrls() {
      urls = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'user_mentions' field.
      * @return The value.
      */
    public java.util.List<CharSequence> getUserMentions() {
      return user_mentions;
    }

    /**
      * Sets the value of the 'user_mentions' field.
      * @param value The value of 'user_mentions'.
      * @return This builder.
      */
    public Builder setUserMentions(java.util.List<CharSequence> value) {
      validate(fields()[15], value);
      this.user_mentions = value;
      fieldSetFlags()[15] = true;
      return this; 
    }

    /**
      * Checks whether the 'user_mentions' field has been set.
      * @return True if the 'user_mentions' field has been set, false otherwise.
      */
    public boolean hasUserMentions() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'user_mentions' field.
      * @return This builder.
      */
    public Builder clearUserMentions() {
      user_mentions = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'long$' field.
      * @return The value.
      */
    public Double getLong$() {
      return long$;
    }

    /**
      * Sets the value of the 'long$' field.
      * @param value The value of 'long$'.
      * @return This builder.
      */
    public Builder setLong$(Double value) {
      validate(fields()[16], value);
      this.long$ = value;
      fieldSetFlags()[16] = true;
      return this; 
    }

    /**
      * Checks whether the 'long$' field has been set.
      * @return True if the 'long$' field has been set, false otherwise.
      */
    public boolean hasLong$() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'long$' field.
      * @return This builder.
      */
    public Builder clearLong$() {
      long$ = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'lat' field.
      * @return The value.
      */
    public Double getLat() {
      return lat;
    }

    /**
      * Sets the value of the 'lat' field.
      * @param value The value of 'lat'.
      * @return This builder.
      */
    public Builder setLat(Double value) {
      validate(fields()[17], value);
      this.lat = value;
      fieldSetFlags()[17] = true;
      return this; 
    }

    /**
      * Checks whether the 'lat' field has been set.
      * @return True if the 'lat' field has been set, false otherwise.
      */
    public boolean hasLat() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'lat' field.
      * @return This builder.
      */
    public Builder clearLat() {
      lat = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    @Override
    public Tweet build() {
      try {
        Tweet record = new Tweet();
        record.created_at = fieldSetFlags()[0] ? this.created_at : (CharSequence) defaultValue(fields()[0]);
        record.id = fieldSetFlags()[1] ? this.id : (Long) defaultValue(fields()[1]);
        record.text = fieldSetFlags()[2] ? this.text : (CharSequence) defaultValue(fields()[2]);
        record.source = fieldSetFlags()[3] ? this.source : (CharSequence) defaultValue(fields()[3]);
        record.retweet_count = fieldSetFlags()[4] ? this.retweet_count : (Integer) defaultValue(fields()[4]);
        record.favorite_count = fieldSetFlags()[5] ? this.favorite_count : (Integer) defaultValue(fields()[5]);
        record.screen_name = fieldSetFlags()[6] ? this.screen_name : (CharSequence) defaultValue(fields()[6]);
        record.location = fieldSetFlags()[7] ? this.location : (CharSequence) defaultValue(fields()[7]);
        record.description = fieldSetFlags()[8] ? this.description : (CharSequence) defaultValue(fields()[8]);
        record.followers_count = fieldSetFlags()[9] ? this.followers_count : (Integer) defaultValue(fields()[9]);
        record.statuses_count = fieldSetFlags()[10] ? this.statuses_count : (Integer) defaultValue(fields()[10]);
        record.geo_enabled = fieldSetFlags()[11] ? this.geo_enabled : (Boolean) defaultValue(fields()[11]);
        record.lang = fieldSetFlags()[12] ? this.lang : (CharSequence) defaultValue(fields()[12]);
        record.hashtags = fieldSetFlags()[13] ? this.hashtags : (java.util.List<CharSequence>) defaultValue(fields()[13]);
        record.urls = fieldSetFlags()[14] ? this.urls : (java.util.List<CharSequence>) defaultValue(fields()[14]);
        record.user_mentions = fieldSetFlags()[15] ? this.user_mentions : (java.util.List<CharSequence>) defaultValue(fields()[15]);
        record.long$ = fieldSetFlags()[16] ? this.long$ : (Double) defaultValue(fields()[16]);
        record.lat = fieldSetFlags()[17] ? this.lat : (Double) defaultValue(fields()[17]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);  

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);  

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
  }

}
